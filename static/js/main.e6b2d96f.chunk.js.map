{"version":3,"sources":["components/ImgCard/index.js","components/Images.js","components/Title/index.js","App.js","serviceWorker.js","index.js"],"names":["ImgCard","props","className","id","alt","name","src","image","onClick","clickedMethod","candyImg","Title","href","score","highscore","message","App","state","clickedImgs","clickedImg","valClickedImgs","console","log","includes","setState","length","push","this","map","candy","key","sort","Math","random","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"4RAoBeA,MAjBf,SAAiBC,GACb,OACQ,yBAAKC,UAAU,+BACX,yBAAKA,UAAU,iBACfC,GAAIF,EAAME,GAEVC,IAAKH,EAAMI,KACXC,IAAKL,EAAMM,MACXC,QAAS,kBAAMP,EAAMQ,cAAcR,EAAME,SCmExCO,EA7EC,CACd,CACI,GAAM,EACN,KAAQ,aACR,MAAS,qHAIb,CACI,GAAM,EACN,KAAQ,gBACR,MAAS,yIAIb,CACI,GAAM,EACN,KAAQ,eACR,MAAS,sIAIb,CACI,GAAM,EACN,KAAQ,iBACR,MAAS,yIAIb,CACI,GAAM,EACN,KAAQ,SACR,MAAS,yIAEb,CACI,GAAM,EACN,KAAQ,gBACR,MAAS,yIAGb,CACI,GAAM,EACN,KAAQ,cACR,MAAS,yIAEb,CACI,GAAM,EACN,KAAQ,cACR,MAAS,yIAGb,CACI,GAAM,EACN,KAAQ,cACR,MAAS,yIAEb,CACI,GAAM,GACN,KAAQ,aACR,MAAS,sIAEb,CACI,GAAM,GACN,KAAQ,YACR,MAAS,+GAGb,CACI,GAAM,GACN,KAAQ,WACR,MAAS,0I,MC7CFC,MAvBf,SAAeV,GACX,OACI,yBAAKC,UAAU,oBACX,yBAAKA,UAAU,iDACf,uBAAGA,UAAU,eAAeU,KAAK,KAAI,yCACrC,4BAAI,0CAAJ,IAAwBX,EAAMY,MAA9B,OAAwC,0CAAxC,IAA4DZ,EAAMa,WAAe,wBAAIZ,UAAU,cAAcD,EAAMc,UAGvH,6BACA,6BACA,6BACA,yBAAKb,UAAU,6BACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,yBAAd,wBACA,uBAAGA,UAAU,oBAAb,yGCoDDc,E,4MA5DfC,MAAQ,CACNP,WACAQ,YAAa,GACbL,MAAO,EACPC,UAAW,EACXC,QAAS,I,EAGXI,WAAY,SAAChB,GACT,IAAMiB,EAAiB,EAAKH,MAAMC,YAClCG,QAAQC,IAAIF,GAEXA,EAAeG,SAASpB,IAEzB,EAAKqB,SAAS,CACZX,MAAO,EACPE,QAAS,+DAEXK,EAAeK,OAAQ,IAIvBL,EAAeM,KAAKvB,GAEpB,EAAKqB,SAAS,CACdX,MAAO,EAAKI,MAAMJ,MAAQ,EAC1BC,UAAW,EAAKG,MAAMJ,MACtBE,QAAS,O,uDAMH,IAAD,OACL,OACE,6BACE,kBAAC,EAAD,CACAF,MAAOc,KAAKV,MAAMJ,MAClBC,UAAWa,KAAKV,MAAMH,UACtBC,QAASY,KAAKV,MAAMF,UAEpB,yBAAKb,UAAU,aACdyB,KAAKV,MAAMP,SAASkB,KAAI,SAACC,GAAD,OACzB,kBAAC,EAAD,CACEC,IAAKD,EAAM1B,GACXA,GAAI0B,EAAM1B,GACVE,KAAMwB,EAAMxB,KACZE,MAAOsB,EAAMtB,MACbE,cAAe,EAAKU,gBACjBY,MAAK,kBAAKC,KAAKC,SAAW,Y,GAnDrBC,aCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/B,QAAQ+B,MAAMA,EAAMrC,c","file":"static/js/main.e6b2d96f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ImgCard(props){\r\n    return(\r\n            <div className=\".cardHolder container-fluid\">\r\n                <img className=\"img-responsive\"\r\n                id={props.id}\r\n                // className =\"images\" \r\n                alt={props.name} \r\n                src={props.image} \r\n                onClick={() => props.clickedMethod(props.id)}\r\n                />\r\n            \r\n            </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ImgCard;"," \r\n const candyImg = [\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"chocolate1\",\r\n        \"image\": \"https://images.unsplash.com/photo-1511381939415-e44015466834?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\r\n        \r\n    },\r\n  \r\n    {\r\n        \"id\": 2,\r\n        \"name\": \"chocolateRasp\",\r\n        \"image\": \"https://images.unsplash.com/photo-1565071559227-20ab25b7685e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n    \r\n    },\r\n     \r\n    {\r\n        \"id\": 3,\r\n        \"name\": \"chocolateNut\",\r\n        \"image\": \"https://images.unsplash.com/photo-1542843137-8791a6904d14?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n    \r\n    },\r\n  \r\n    {\r\n        \"id\": 4,\r\n        \"name\": \"boxOfChocolate\",\r\n        \"image\": \"https://images.unsplash.com/photo-1526081715791-7c538f86060e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n    },\r\n    \r\n    \r\n    {\r\n        \"id\": 5,\r\n        \"name\": \"lindor\",\r\n        \"image\": \"https://images.unsplash.com/photo-1583272468191-9e38292ebb58?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"name\": \"assortedCandy\",\r\n        \"image\": \"https://images.unsplash.com/photo-1513593854556-94df5c54a8d6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n    },\r\n    \r\n    {\r\n        \"id\": 7,\r\n        \"name\": \"gummy bears\",\r\n        \"image\": \"https://images.unsplash.com/photo-1582058091505-f87a2e55a40f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n    },\r\n    {\r\n        \"id\": 8,\r\n        \"name\": \"gummy worms\",\r\n        \"image\": \"https://images.unsplash.com/photo-1516747773440-e114ee0d3c07?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n        \r\n    },\r\n    {\r\n        \"id\": 9,\r\n        \"name\": \"candyhearts\",\r\n        \"image\": \"https://images.unsplash.com/photo-1484979045040-0ab3854b6acb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n    },\r\n    {\r\n        \"id\": 10,\r\n        \"name\": \"jellybeans\",\r\n        \"image\": \"https://images.unsplash.com/photo-1547097465-617b04e11bb2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n    },\r\n    {\r\n        \"id\": 11,\r\n        \"name\": \"starburst\",\r\n        \"image\": \"https://images.unsplash.com/photo-1519686997393-7bdb73d6c54d?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\r\n    },\r\n    \r\n    {\r\n        \"id\": 12,\r\n        \"name\": \"skittles\",\r\n        \"image\": \"https://images.unsplash.com/photo-1526140671827-b648ad864cb4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n    }\r\n     \r\n  ];\r\n\r\n\r\n\r\n  export default candyImg;\r\n  ","import React from \"react\";\r\nimport \"./TitleStyle.css\";\r\n\r\nfunction Title(props) {\r\n    return (\r\n        <div className=\"container-header\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"/\"><h2>Welcome!</h2></a>\r\n            <h2><b>Your Score:</b> {props.score} || <b>Top Score: </b> {props.highscore}</h2><h2 className=\"messageBox\">{props.message}</h2>\r\n            </nav>\r\n\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4 text-center\">Time For Some Candy!</h1>\r\n                <p className=\"lead text-center\">Click on an image of your favorite candies. Don't click on it twice \r\n                 or else you lose some points!</p>\r\n            </div>\r\n        </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;","import React, {Component} from \"react\";\nimport ImgCard from \"./components/ImgCard\";\nimport candyImg from \"./components/Images\";\nimport Title from \"./components/Title\";\nimport \"../src/components/ImgCard/style.css\";\n\n\nclass App extends Component {\n\nstate = {\n  candyImg,\n  clickedImgs: [],\n  score: 0,\n  highscore: 0,\n  message: \"\"\n};\n\nclickedImg= (id) => {\n    const valClickedImgs = this.state.clickedImgs;\n    console.log(valClickedImgs)\n    \n  if(valClickedImgs.includes(id)){\n    // if the same = score goes to 0\n    this.setState({\n      score: 0,\n      message: \"...Image already clicked! Game Over. Click to start again.\"\n    });\n    valClickedImgs.length =0;\n    \n  }\n  else{\n    valClickedImgs.push(id)\n    //score go up if ids the same\n    this.setState({\n    score: this.state.score + 1,\n    highscore: this.state.score,\n    message: \"\",\n    })\n  }\n  \n}\n\nrender() {\n    return (\n      <div>\n        <Title \n        score={this.state.score} \n        highscore={this.state.highscore}\n        message={this.state.message} \n        />\n        <div className=\"imgHolder\">\n        {this.state.candyImg.map((candy) => (\n        <ImgCard\n          key={candy.id}\n          id={candy.id}\n          name={candy.name}\n          image={candy.image}\n          clickedMethod={this.clickedImg}\n        />)).sort(()=> Math.random() - 0.5)}\n        </div>\n        \n      </div>\n      /* got from tutor for .sort above */\n     \n    );\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}